
[project]
name = "unitcellsdf"
description = "Generate 3D meshes from signed distance functions."
version = "0.0.2"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE.md"}
keywords = ["unitcell", "unitcellhub", "sdf"]
authors = [
    {name = "Michael Fogleman", email = "michael.fogleman@gmail.com"}
]
classifiers = [
  'Development Status :: 3 - Alpha',
  'Intended Audience :: Developers',
  'Natural Language :: English',
  'License :: OSI Approved :: MIT License',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3',
]
dependencies = [
    "matplotlib>=3.9.3",
    "meshio>=5.3.5",
    "numpy<2.0",
    "pillow>=11.0.0",
    "scikit-image>=0.24.0",
    "scipy>=1.13.1",
]

[project.urls]
"Homepage" = "https://github.com/unitcellhub/unitcellsdf"
"Bug Reports" = "https://github.com/unitcellhub/unitcellsdf/issues"


[tool.bumpversion]
current_version = "0.0.2"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash separator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_l}{distance_to_latest_tag}",
    "{major}.{minor}.{patch}",
]
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""
regex = false
ignore_missing_version = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
pre_commit_hooks = ["uv sync", "git add uv.lock"]
commit_args = ""

[tool.bumpversion.parts.pre_l]
values = ["dev", "final"]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "sdf/__init__.py"
search = "version = \"{current_version}\""
replace =  "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[tool.hatch.build.targets.wheel]
packages = ["sdf"]

[dependency-groups]
dev = [
    "ipython>=8.18.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


